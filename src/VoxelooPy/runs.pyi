from typing import Generic, TypeVar, Any
import numpy as np

T = TypeVar('T', bound=np.generic)

class Index(Generic[T]):
    def __init__(self) -> None: ...
    def size(self) -> int: ...
    def get(self, pos: int) -> T: ...
    def loads(self, blob: str) -> None: ...
    def dumps(self) -> bytes: ...
    def storage_size(self) -> int: ...

class IndexBuilder(Generic[T]):
    def __init__(self, pos: int, val: T) -> None: ...
    def add(self, span: tuple[int, int], val: T) -> None: ...
    def add(self, pos: int, val: T) -> None: ...
    def build(self) -> Index[T]: ...